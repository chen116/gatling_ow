{
  "simulation": "org.apache.openwhisk.LatencySimulation",
  "simulationId": "latencysimulation",
  "start": 1543875937812,
  "description": "",
  "scenarios": ["Invoke one action after each other to test latency"],
  "assertions": [
{
  "path": "Warm nodejs:default invocation",
  "target": "mean of response time",
  "condition": "is less than or equal to",
  "expectedValues": [2000.0],
  "result": true,
  "message": "Warm nodejs:default invocation: mean of response time is less than or equal to 2000.0",
  "actualValue": [93.0]
},
{
  "path": "Warm nodejs:default invocation",
  "target": "mean of response time",
  "condition": "is less than",
  "expectedValues": [2000.0],
  "result": true,
  "message": "Warm nodejs:default invocation: mean of response time is less than 2000.0",
  "actualValue": [93.0]
},
{
  "path": "Warm nodejs:default invocation",
  "target": "count of failed requests",
  "condition": "is less than or equal to",
  "expectedValues": [99999.0],
  "result": true,
  "message": "Warm nodejs:default invocation: count of failed requests is less than or equal to 99999.0",
  "actualValue": [0.0]
},
{
  "path": "Warm nodejs:default invocation",
  "target": "percentage of failed requests",
  "condition": "is less than or equal to",
  "expectedValues": [0.99],
  "result": true,
  "message": "Warm nodejs:default invocation: percentage of failed requests is less than or equal to 0.99",
  "actualValue": [0.0]
},
{
  "path": "Warm python:default invocation",
  "target": "mean of response time",
  "condition": "is less than or equal to",
  "expectedValues": [2000.0],
  "result": true,
  "message": "Warm python:default invocation: mean of response time is less than or equal to 2000.0",
  "actualValue": [1920.0]
},
{
  "path": "Warm python:default invocation",
  "target": "mean of response time",
  "condition": "is less than",
  "expectedValues": [2000.0],
  "result": true,
  "message": "Warm python:default invocation: mean of response time is less than 2000.0",
  "actualValue": [1920.0]
},
{
  "path": "Warm python:default invocation",
  "target": "count of failed requests",
  "condition": "is less than or equal to",
  "expectedValues": [99999.0],
  "result": true,
  "message": "Warm python:default invocation: count of failed requests is less than or equal to 99999.0",
  "actualValue": [0.0]
},
{
  "path": "Warm python:default invocation",
  "target": "percentage of failed requests",
  "condition": "is less than or equal to",
  "expectedValues": [0.99],
  "result": true,
  "message": "Warm python:default invocation: percentage of failed requests is less than or equal to 0.99",
  "actualValue": [0.0]
}
  ]
}